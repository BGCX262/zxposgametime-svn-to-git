#summary Game time take ii: personal library, use case in this page.
#labels Phase-Requirements

= 渺茫的需求 =

笔者是一个爱书之人，家里各类书籍已过千册，而平时又时常有朋友外借，因此需要一个个人图书管理系统。该系统应该能够将书籍的基本信息按计算机类、非计算机类分别建档，实现按书名、作者、类别、出版社等关键字的组合查询功能。在使用该系统录入新书籍时系统会自动按规则生成书号，可以修改信息，但不能够删除记录。该系统还应该能够对书籍的外借情况进行记录，可对外借情况列表打印。另外，还希望能够对书籍的购买金额、册数按特定时限进行统计。


= 用例 =
从微茫的需求出发，软件研发人员开始了向Code Complete的远征：他们先要越过用例山，然后跨过domain model的沼泽，在系统设计的一场大战之后，逐步向代码高地挺进。这只队伍原本只是身披兽皮，手持长矛，但是待他们进入到代码高地，他们已经是身着体贴服饰，手持镰刀斧头的IT民工了。

== 用例一 == 
*书籍信息的录入*

 * *操作者*：My Library的用户，简称用户
 * *范围*：My Library
 * *前置条件*：手头有一本书，XD，并且这本书在My Library里面没有记录
 * *最小保证*：如果录入不成功，需要提示用户录入不成功。My Library原有数据不得被破坏。
 * *成功保证*：书籍信息被成功录入到My Library中（可以通过浏览或者查询功能验证）。
 * *主成功场景*：
  # 用户打开My Library。
  # My Library启动，显示默认页面（也许是书籍浏览页面）。
  # 用户操作My Library进入书籍信息录入页面。
  # My Library显示书籍信息录入页面。用户可以填写的信息包括书名、作者（多名作者，译者?）、出版社、类别（计算机/非计算机），_册数_ (这里可能引入一个问题，即需要一个计数类来统计每种书的册数)，价格（考虑折扣的情况？），购买日期；用户必须输入的信息包括书名，还有其他吗？
  # 用户根据My Library的提示填写书籍信息，并提交。
  # My Library验证图书信息的准确性和完备性
  # My Library生成一个全局书号
  # 重复上面用例，直到用户选择退出

 * *扩展场景*：
  6a 验证不通过，My Library提示用户需要填写/改正相应的信息
  6b 如果现在输入的书已经在My Library中了，需要提示用户。然后怎么办？

 * *补充说明*：
  书籍默认的分类为非计算机类，默认册数为1，购买日期默认为录入当天


== 用例二 ==
*书籍信息的查询*

 * *操作者*：My Library的用户，简称用户
 * *范围*：My Library
 * *前置条件*：起码有一本书已经被录入到My Library里面
 * *最小保证*：无
 * *成功保证*：符合条件的书能够被检索出来，并通过列表显示出来。如果没有符合条件的书，给用户明确的提示。
 * *主成功场景*：
  # 用户打开My Library。
  # My Library启动，显示默认页面。
  # 用户操作My Library进入书籍检索页面，或者直接在主界面的搜索框里面输入关键词？
  # My Library 显示书籍搜索页面。
  # 用户填写搜索条件，可以是书名，作者，类别，出版社以及上述信息的组合，用户提交查询条件。
  # My Library根据用户的查询条件进行检索，并给出查询结果。
  # 用户修改查询条件，重复上述两个步骤，在查询结果之内进行再检索。
  # 用户结束这次查询

 * *扩展场景*：
  6a 如果没有找到符合查询条件的书籍，则给用户提示，让他修改搜索条件

 * *补充说明*：
  书名和作者的匹配可以是部分匹配，具体算法需要再研究，类别出版社可以多选，出版社列表最好可以又My Library自动生成。书名、作者、类别、出版社这几种信息之间的关系是“交”的关系。用户可以只填写一条查询条件，其他的留空，表示any。


 _书籍信息的浏览是否应该并入这个用例？还是单独作为一个用例_ ？


== 用例三 ==
*外接情况维护（借出，归还）*

 * *操作者*：My Library的用户，简称用户
 * *范围*：My Library
 * *前置条件*：起码有一本书的信息已经被录入过
 * *最小保证*：不破坏My Library中原有的书籍信息
 * *成功保证*：正确更新书藉的外接、归还或者转借情况。不提供借书到期提醒功能。
 * *主成功场景*：
  # 用户打开My Library。
  # My Library启动，显示默认页面。
  # 用户指示My Library进入书籍信息维护页面（这个页面除了进行外借情况维护，还可以进行书籍信息补全（比如价钱，购买日期等）。
  # 用户输入书名（之前用户可能需要用查询功能来获得准确的书名）
  # My Library把对应书的信息显示在信息维护页面中，其中就包括外接情况。外借情况包括书是否被外借及借书人姓名（如果有的话）
  # 用户更新外接情况
  # 用户重复上面三个步骤更新多本书的外借情况
  # 用户退出

 * *扩展场景*：
  5a 没有找到符合条件的书，提示用户更改书名或者关键词

  打印模块


== 用例四  ==
*购书历史统计分析*

 * *操作者*：My Library的用户，简称用户
 * *范围*：My Library
 * *前置条件*：起码有一本书的信息已经被录入过
 * *最小保证*：不破坏My Library中原有的书籍信息。记录错误日志
 * *成功保证*：正确统计出一段时间之内购买书的册数或者金额
 * *主成功场景*：
  # 用户打开My Library。
  # My Library启动，显示默认页面。
  # 用户指示My Library进入历史统计分析页面。
  # My Library进入历史统计分析页面。
  # 用户输入关心的时间段，包括开始日期和结束日期
  # My Library查询所有购买日期在用户给定时间范围里面的书籍信息，获得他们的册数和价格信息，并把结果（册数和金额）呈现给用户。
  # 用户重复上述两个步骤，直到满意
  # 用户关闭My Library

 * *扩展场景*：
  无


== 用例五 ==
*书籍信息的维护*

 * *操作者*：My Library的用户，简称用户
 * *范围*：My Library
 * *前置条件*：起码有一本书的信息已经被录入过
 * *最小保证*：不破坏原有信息。记录错误日志
 * *成功保证*：书籍信息按照用户的意愿被更新
 * *主成功场景*：跟外借信息维护基本相同
  # 用户打开My Library。
  # My Library启动，显示默认页面。
  # 用户指示My Library进入书籍维护页面。
  # My Library显示书籍维护页面。
  # 用户输入书名（之前用户可能需要用查询功能来获得准确的书名）。
  # My Library把对应书的信息显示在信息维护页面中。
  # 用户更改书籍信息，并提交。
  # My Library验证用户提交信息的正确性并更新
  # 用户重复上面四个步骤更新多本书的外借情况
  # 用户退出

 * *扩展场景*：
  6a 没有找到符合条件的书，提示用户更改书名或者关键词。

  8a 用户提交的信息没有通过My Library的检查/验证